#include <Arduino.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#include "pins.h"
#include "display.h"
#include "functions.h"
#include "measure.h"
#include "pitches.h"
#include "settings.h"

////////////Variables//////////////

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

unsigned int PageNumber = 0;

bool ForceDisplayUpdate = false;

unsigned int DischargePage = STD_DISCHARGE_PAGE;

const unsigned char LOGO_Bitmap [] PROGMEM = {  //128x64

	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 
	0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 
	0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 
	0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 
	0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 
	0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 
	0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 
	0x00, 0x3e, 0xfe, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 
	0x00, 0x3f, 0x7f, 0xe0, 0x00, 0x00, 0x7f, 0xf0, 0x7f, 0xff, 0xc0, 0x00, 0x7f, 0xff, 0xbe, 0x00, 
	0x00, 0x3f, 0xbf, 0xff, 0xe0, 0x00, 0x7f, 0xfd, 0xff, 0xff, 0xe0, 0x0f, 0xff, 0xff, 0x7e, 0x00, 
	0x00, 0x1f, 0xdf, 0xff, 0xfe, 0x00, 0xff, 0xfd, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xfc, 0x00, 
	0x00, 0x1f, 0xe7, 0xff, 0xff, 0x01, 0xff, 0xfd, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xfb, 0xfc, 0x00, 
	0x00, 0x0f, 0xe1, 0xff, 0xff, 0xc3, 0xff, 0xfd, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xe3, 0xf8, 0x00, 
	0x00, 0x03, 0xe1, 0xc1, 0xff, 0xe3, 0xff, 0xfd, 0xff, 0xff, 0xe1, 0xff, 0x81, 0xc3, 0xf0, 0x00, 
	0x00, 0x03, 0xe3, 0xe0, 0x1f, 0xf3, 0xff, 0xfd, 0xf8, 0x07, 0xe3, 0xfe, 0x01, 0xc3, 0xf0, 0x00, 
	0x00, 0x03, 0xe3, 0xe0, 0x07, 0xf3, 0xff, 0xfd, 0xf3, 0xf3, 0xe7, 0xf8, 0x01, 0xc3, 0xf0, 0x00, 
	0x00, 0x03, 0xe3, 0xe0, 0x03, 0xfb, 0xf0, 0xfd, 0xf3, 0xf3, 0xf7, 0xe0, 0x03, 0xc3, 0xf0, 0x00, 
	0x00, 0x03, 0xe3, 0xe0, 0x01, 0xfb, 0xf0, 0xfd, 0xf3, 0xf3, 0xff, 0xc0, 0x03, 0xc3, 0xf0, 0x00, 
	0x00, 0x03, 0xe3, 0xf8, 0x00, 0xfb, 0xf0, 0xfd, 0xf3, 0xf3, 0xff, 0xc0, 0x07, 0xc3, 0xe0, 0x00, 
	0x00, 0x03, 0xfb, 0xfc, 0x00, 0xff, 0xf0, 0xfd, 0xf3, 0xf3, 0xff, 0x80, 0x0f, 0xcf, 0xe0, 0x00, 
	0x00, 0x03, 0xfd, 0xfe, 0x00, 0x7f, 0xe0, 0xfd, 0xf3, 0xf3, 0xff, 0x80, 0x3f, 0xdf, 0xe0, 0x00, 
	0x00, 0x01, 0xfc, 0xff, 0x00, 0x7f, 0xe0, 0xfd, 0xf3, 0xf3, 0xff, 0x80, 0x3f, 0x9f, 0xe0, 0x00, 
	0x00, 0x00, 0xfe, 0x7f, 0x00, 0x7f, 0xff, 0xfd, 0xf8, 0x07, 0xff, 0x80, 0x3f, 0x1f, 0xc0, 0x00, 
	0x00, 0x00, 0x7e, 0x3f, 0x00, 0x7f, 0xff, 0xfd, 0xff, 0xff, 0xff, 0x80, 0x3e, 0x1f, 0x00, 0x00, 
	0x00, 0x00, 0x7e, 0x3f, 0x00, 0x7f, 0xff, 0xfd, 0xff, 0xff, 0xff, 0x80, 0x3e, 0x3f, 0x00, 0x00, 
	0x00, 0x00, 0x7f, 0x3e, 0x00, 0x7f, 0xff, 0xfd, 0xff, 0xff, 0xff, 0x80, 0x3e, 0x3e, 0x00, 0x00, 
	0x00, 0x00, 0x3f, 0xfe, 0x00, 0x7f, 0xff, 0xfd, 0xff, 0xff, 0xff, 0x80, 0x3e, 0xfe, 0x00, 0x00, 
	0x00, 0x00, 0x3f, 0xfe, 0x00, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xc0, 0x3f, 0xfe, 0x00, 0x00, 
	0x00, 0x00, 0x1f, 0xfe, 0x00, 0xfb, 0xf8, 0xfe, 0x00, 0x00, 0x7f, 0xc0, 0x3f, 0xfc, 0x00, 0x00, 
	0x00, 0x00, 0x1f, 0xff, 0x01, 0xfb, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xf8, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0xff, 0x83, 0xfb, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x03, 0xff, 0xe7, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x1f, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xfe, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x0f, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xf8, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x0f, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xe0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


/////////////////////////////////

void DisplayInit() {
  if (!display.begin(SSD1306_SWITCHCAPVCC, DISPLAY_ADRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
  }
  display.clearDisplay();
}

void DrawBootPage() {
  display.clearDisplay();
  display.display();

  if (CUSTOM_LOGO){
    display.drawBitmap(0, 0, LOGO_Bitmap, 128, 64, WHITE);
    
    display.display();
    delay(1500);
  }
  
  display.setTextSize(3);
  display.setTextColor(WHITE);
  display.setCursor(36, 11);
  display.println("BDC");

  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 45);
  display.println("Dev. by Marvin Ramm");

  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 55);
  display.print("V");
  display.println(VERSION);

  display.display();
  delay(1200);
}

void UpdateDisplay() {
  display.clearDisplay();
  

  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);

  if (DischargeState == 0){
    display.println("Standby");
  }else if (DischargeState == 1){
    display.print("Discharge -> ");
    display.print(DischargeVoltage);
    display.println("V");
  }else{
    display.println("Done");
  }

  if (DischargeState != 1) {
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 12);
    display.print(AvgCellVoltage, 3);
    display.print("V");
  }else{
    if (DischargePage != 1){
      display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 12);
    display.print(AvgCellVoltage, 3);
    display.print("V ");
    if((DischargeVoltage - AvgCellVoltage) < 0){
      display.print(DischargeVoltage - AvgCellVoltage);
      display.println("V");
    }else{
      display.println("-0.00V");
    }
    
    }else{
      display.setTextSize(1);
      display.setTextColor(WHITE);
      display.setCursor(0, 12);
      display.print(BATVoltage, 3);
      display.print("V");
    }
  }

  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(115, 0);
  
if (CellType == 2){
    display.println("S2");
  }else if (CellType == 3){
    display.println("S3");
  }else if (CellType == 4){
    display.println("S4");
  }else if (CellType == 5){
    display.println("S5");
  }else if (CellType == 6){
    display.println("S6");
  }

  display.setTextSize(3);
  display.setTextColor(WHITE);
  if (DischargeState != 1) {
    display.setCursor(20, 31);
    display.print(DischargeVoltage);
    display.println("V");
  }else{
    if (DischargePage == 0){
      if (BATVoltage < 10.00){
    display.setCursor(20, 31);
  }else{
    display.setCursor(10 , 31);
  }
  display.print(BATVoltage);
  display.println("V");
  
  }else if (DischargePage == 1){
    display.setCursor(20, 31);
    display.print(AvgCellVoltage);
    display.println("V");
  }else{
    if (DischargePercent < 10){
      display.setCursor(50, 31);
    }else if ((DischargePercent >= 10) && (DischargePercent < 100)) {
      display.setCursor(40, 31);
    }else{
      display.setCursor(30, 31);
    }
    display.print(DischargePercent);
    display.println("%");
  }
  }
  

  display.display();
}
